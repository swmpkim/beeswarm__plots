na.rm = TRUE, # ignore missing data
show.legend = FALSE) +  # don't need a legend for colors by site
labs(title = "April 2017 salinity distribution by site",
x = "site",
y = "salinity (psu)") +
theme_bw()
ggplot(april_sal) +
geom_quasirandom(aes(x = site, y = sal, color = site),
size = 2,
na.rm = TRUE, # ignore missing data
show.legend = FALSE) +  # don't need a legend for colors by site
labs(title = "April 2017 salinity distribution by site",
x = "site",
y = "salinity (psu)") +
theme_bw()
?geom_quasirandom
ggplot(april_sal) +
geom_quasirandom(aes(x = site, y = sal, color = site),
size = 2,
shape = a,
na.rm = TRUE, # ignore missing data
show.legend = FALSE) +  # don't need a legend for colors by site
labs(title = "April 2017 salinity distribution by site",
x = "site",
y = "salinity (psu)") +
theme_bw()
ggplot(april_sal) +
geom_quasirandom(aes(x = site, y = sal, color = site),
size = 2,
shape = "a",
na.rm = TRUE, # ignore missing data
show.legend = FALSE) +  # don't need a legend for colors by site
labs(title = "April 2017 salinity distribution by site",
x = "site",
y = "salinity (psu)") +
theme_bw()
ggplot(april_sal) +
geom_quasirandom(aes(x = site, y = sal, color = site),
size = 2,
shape = 0,
na.rm = TRUE, # ignore missing data
show.legend = FALSE) +  # don't need a legend for colors by site
labs(title = "April 2017 salinity distribution by site",
x = "site",
y = "salinity (psu)") +
theme_bw()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(SWMPr)  # for easy import and QC of SWMP data
library(tidyverse)  # for lots of data manipulation functions
library(ggbeeswarm)  # for cool plotting
library(knitr)  # for pretty tables
# look for data here
datapath <- "C:/Users/kimberly.cressman/Desktop/Main Docs/Data-latest"
# import data
dat_bl <- import_local(datapath, "gndblwq2017") %>%
qaqc(qaqc_keep = c(0, 1, 5)) %>%
select(-level, -clevel, -chlfluor)
dat_bh <- import_local(datapath, "gndbhwq2017") %>%
qaqc(qaqc_keep = c(0, 1, 5)) %>%
select(-level, -clevel, -chlfluor)
dat_bc <- import_local(datapath, "gndbcwq2017") %>%
qaqc(qaqc_keep = c(0, 1, 5)) %>%
select(-level, -clevel, -chlfluor)
dat_pc <- import_local(datapath, "gndpcwq2017") %>%
qaqc(qaqc_keep = c(0, 1, 5)) %>%
select(-level, -clevel, -chlfluor)
bl_do_mgl <- dat_bl %>%
select(datetimestamp, do_mgl) %>%
rename(BL = do_mgl)
bh_do_mgl <- dat_bh %>%
select(datetimestamp, do_mgl) %>%
rename(BH = do_mgl)
bc_do_mgl <- dat_bc %>%
select(datetimestamp, do_mgl) %>%
rename(BC = do_mgl)
pc_do_mgl <- dat_pc %>%
select(datetimestamp, do_mgl) %>%
rename(PC = do_mgl)
bl <- dat_bl %>%
select(datetimestamp, do_mgl) %>%
rename(BL = do_mgl)
bh <- dat_bh %>%
select(datetimestamp, do_mgl) %>%
rename(BH = do_mgl)
bc <- dat_bc %>%
select(datetimestamp, do_mgl) %>%
rename(BC = do_mgl)
pc <- dat_pc %>%
select(datetimestamp, do_mgl) %>%
rename(PC = do_mgl)
all <- bl %>%
left_join(bh) %>%
left_join(bc) %>%
left_join(pc)
all_long <- all %>%
gather(key = "site", value = "DO_mgL", -datetimestamp)
kable(head(all_long), align = "c")
kable(tail(all_long), align = "c")
all_long <- all %>%
gather(key = "site", value = "value", -datetimestamp)
kable(head(all_long), align = "c")
kable(tail(all_long), align = "c")
ggplot(all_long) +
geom_quasirandom(aes(x = site, y = value, color = site),
na.rm = TRUE, # ignore missing data
show.legend = FALSE) +  # don't need a legend for colors by site
labs(title = "2017 DO mg/L distribution by site",
x = "site",
y = "Dissolved Oxygen (mg/L)") +
theme_bw()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(SWMPr)  # for easy import and QC of SWMP data
library(tidyverse)  # for lots of data manipulation functions
library(ggbeeswarm)  # for cool plotting
library(knitr)  # for pretty tables
# look for data here
datapath <- "C:/Users/kimberly.cressman/Desktop/Main Docs/Data-latest"
# import data
dat_bl <- import_local(datapath, "gndblwq2017") %>%
qaqc(qaqc_keep = c(0, 1, 5)) %>%
select(-level, -clevel, -chlfluor)
dat_bh <- import_local(datapath, "gndbhwq2017") %>%
qaqc(qaqc_keep = c(0, 1, 5)) %>%
select(-level, -clevel, -chlfluor)
dat_bc <- import_local(datapath, "gndbcwq2017") %>%
qaqc(qaqc_keep = c(0, 1, 5)) %>%
select(-level, -clevel, -chlfluor)
dat_pc <- import_local(datapath, "gndpcwq2017") %>%
qaqc(qaqc_keep = c(0, 1, 5)) %>%
select(-level, -clevel, -chlfluor)
BL <- dat_bl
param <- "sal"
bl <- BL %>%
select(datetimestamp, param) %>%
rename(BL = param)
bl <- BL %>%
select(datetimestamp, !!param) %>%
rename(BL = param)
bl <- BL %>%
select(datetimestamp, !!param) %>%
rename(BL = !!param)
tail(bl)
param_extract <- function(BC, BH, BL, PC, param) {
bl <- BL %>%
select(datetimestamp, !!param) %>%
rename(BL = !!param)
bc <- BC %>%
select(datetimestamp, !!param) %>%
rename(BC = !!param)
bh <- BH %>%
select(datetimestamp, !!param) %>%
rename(BH = !!param)
pc <- PC %>%
select(datetimestamp, !!param) %>%
rename(BC = !!param)
}
param_extract(dat_bc, dat_bh, dat_bl, dat_pc, "sal")
#' Title
#'
#' @param BC data frame with Bayou Cumbest data. if unspecified, defaults to dat_bc.
#' @param BH data frame with Bayou Heron data
#' @param BL data frame with Bangs Lake data
#' @param PC data frame with Point aux Chenes data
#' @param param put in quotes - param you want to extract. examples: "sal" / "do_mgl"
#'
#' @return returns one wide data frame, with column names being site abbreviations (BC, BH, BL, PC) and values being the parameter of interest
#' @export
#'
param_extract_wide <- function(BC = dat_bc, BH = dat_bh, BL = dat_bl, PC = dat_pc, param) {
bl <- BL %>%
select(datetimestamp, !!param) %>%
rename(BL = !!param)
bc <- BC %>%
select(datetimestamp, !!param) %>%
rename(BC = !!param)
bh <- BH %>%
select(datetimestamp, !!param) %>%
rename(BH = !!param)
pc <- PC %>%
select(datetimestamp, !!param) %>%
rename(BC = !!param)
# glue them all together
all <- bl %>%
left_join(bh) %>%
left_join(bc) %>%
left_join(pc)
return(all)
}
param_extract_long <- function(BC = dat_bc, BH = dat_bh, BL = dat_bl, PC = dat_pc, param) {
bl <- BL %>%
select(datetimestamp, !!param) %>%
rename(BL = !!param)
bc <- BC %>%
select(datetimestamp, !!param) %>%
rename(BC = !!param)
bh <- BH %>%
select(datetimestamp, !!param) %>%
rename(BH = !!param)
pc <- PC %>%
select(datetimestamp, !!param) %>%
rename(BC = !!param)
# glue them all together and gather into a long format
all <- bl %>%
left_join(bh) %>%
left_join(bc) %>%
left_join(pc) %>%
gather(key = "site", value = "value", -datetimestamp)
return(all)
}
param_extract_wide("sal")
#' Title
#'
#' @param BC data frame with Bayou Cumbest data. if unspecified, defaults to dat_bc.
#' @param BH data frame with Bayou Heron data
#' @param BL data frame with Bangs Lake data
#' @param PC data frame with Point aux Chenes data
#' @param param put in quotes - param you want to extract. examples: "sal" / "do_mgl"
#'
#' @return returns one wide data frame, with column names being site abbreviations (BC, BH, BL, PC) and values being the parameter of interest
#' @export
#'
param_extract_wide <- function(param, BC = dat_bc, BH = dat_bh, BL = dat_bl, PC = dat_pc) {
bl <- BL %>%
select(datetimestamp, !!param) %>%
rename(BL = !!param)
bc <- BC %>%
select(datetimestamp, !!param) %>%
rename(BC = !!param)
bh <- BH %>%
select(datetimestamp, !!param) %>%
rename(BH = !!param)
pc <- PC %>%
select(datetimestamp, !!param) %>%
rename(BC = !!param)
# glue them all together
all <- bl %>%
left_join(bh) %>%
left_join(bc) %>%
left_join(pc)
return(all)
}
param_extract_long <- function(param, BC = dat_bc, BH = dat_bh, BL = dat_bl, PC = dat_pc) {
bl <- BL %>%
select(datetimestamp, !!param) %>%
rename(BL = !!param)
bc <- BC %>%
select(datetimestamp, !!param) %>%
rename(BC = !!param)
bh <- BH %>%
select(datetimestamp, !!param) %>%
rename(BH = !!param)
pc <- PC %>%
select(datetimestamp, !!param) %>%
rename(BC = !!param)
# glue them all together and gather into a long format
all <- bl %>%
left_join(bh) %>%
left_join(bc) %>%
left_join(pc) %>%
gather(key = "site", value = "value", -datetimestamp)
return(all)
}
testwide <- param_extract_wide("sal")
head(testwide)
#' Title
#'
#' @param BC data frame with Bayou Cumbest data. if unspecified, defaults to dat_bc.
#' @param BH data frame with Bayou Heron data
#' @param BL data frame with Bangs Lake data
#' @param PC data frame with Point aux Chenes data
#' @param param put in quotes - param you want to extract. examples: "sal" / "do_mgl"
#'
#' @return returns one wide data frame, with column names being site abbreviations (BC, BH, BL, PC) and values being the parameter of interest
#' @export
#'
param_extract_wide <- function(param, BC = dat_bc, BH = dat_bh, BL = dat_bl, PC = dat_pc) {
bl <- BL %>%
select(datetimestamp, !!param) %>%
rename(BL = !!param)
bc <- BC %>%
select(datetimestamp, !!param) %>%
rename(BC = !!param)
bh <- BH %>%
select(datetimestamp, !!param) %>%
rename(BH = !!param)
pc <- PC %>%
select(datetimestamp, !!param) %>%
rename(PC = !!param)
# glue them all together
all <- bl %>%
left_join(bh) %>%
left_join(bc) %>%
left_join(pc)
return(all)
}
param_extract_long <- function(param, BC = dat_bc, BH = dat_bh, BL = dat_bl, PC = dat_pc) {
bl <- BL %>%
select(datetimestamp, !!param) %>%
rename(BL = !!param)
bc <- BC %>%
select(datetimestamp, !!param) %>%
rename(BC = !!param)
bh <- BH %>%
select(datetimestamp, !!param) %>%
rename(BH = !!param)
pc <- PC %>%
select(datetimestamp, !!param) %>%
rename(PC = !!param)
# glue them all together and gather into a long format
all <- bl %>%
left_join(bh) %>%
left_join(bc) %>%
left_join(pc) %>%
gather(key = "site", value = "value", -datetimestamp)
return(all)
}
testwide <- param_extract_wide("sal")
head(testwide)
tail(testwide)
testlong <- param_extract_long("do_mgl")
head(testlong)
tail(testlong)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(SWMPr)  # for easy import and QC of SWMP data
library(tidyverse)  # for lots of data manipulation functions
library(ggbeeswarm)  # for cool plotting
library(knitr)  # for pretty tables
# look for data here
datapath <- "C:/Users/kimberly.cressman/Desktop/Main Docs/Data-latest"
# import data
dat_bl <- import_local(datapath, "gndblwq2017") %>%
qaqc(qaqc_keep = c(0, 1, 5)) %>%
select(-level, -clevel, -chlfluor)
dat_bh <- import_local(datapath, "gndbhwq2017") %>%
qaqc(qaqc_keep = c(0, 1, 5)) %>%
select(-level, -clevel, -chlfluor)
dat_bc <- import_local(datapath, "gndbcwq2017") %>%
qaqc(qaqc_keep = c(0, 1, 5)) %>%
select(-level, -clevel, -chlfluor)
dat_pc <- import_local(datapath, "gndpcwq2017") %>%
qaqc(qaqc_keep = c(0, 1, 5)) %>%
select(-level, -clevel, -chlfluor)
#' Title
#'
#' @param BC data frame with Bayou Cumbest data. if unspecified, defaults to dat_bc.
#' @param BH data frame with Bayou Heron data
#' @param BL data frame with Bangs Lake data
#' @param PC data frame with Point aux Chenes data
#' @param param put in quotes - param you want to extract. examples: "sal" / "do_mgl"
#'
#' @return returns one wide data frame, with column names being site abbreviations (BC, BH, BL, PC) and values being the parameter of interest
#' @export
#'
param_extract_wide <- function(param, BC = dat_bc, BH = dat_bh, BL = dat_bl, PC = dat_pc) {
bl <- BL %>%
select(datetimestamp, !!param) %>%
rename(BL = !!param)
bc <- BC %>%
select(datetimestamp, !!param) %>%
rename(BC = !!param)
bh <- BH %>%
select(datetimestamp, !!param) %>%
rename(BH = !!param)
pc <- PC %>%
select(datetimestamp, !!param) %>%
rename(PC = !!param)
# glue them all together
all <- bl %>%
left_join(bh) %>%
left_join(bc) %>%
left_join(pc)
return(all)
}
param_extract_long <- function(param, BC = dat_bc, BH = dat_bh, BL = dat_bl, PC = dat_pc) {
bl <- BL %>%
select(datetimestamp, !!param) %>%
rename(BL = !!param)
bc <- BC %>%
select(datetimestamp, !!param) %>%
rename(BC = !!param)
bh <- BH %>%
select(datetimestamp, !!param) %>%
rename(BH = !!param)
pc <- PC %>%
select(datetimestamp, !!param) %>%
rename(PC = !!param)
# glue them all together and gather into a long format
all <- bl %>%
left_join(bh) %>%
left_join(bc) %>%
left_join(pc) %>%
gather(key = "site", value = "value", -datetimestamp)
return(all)
}
sal_long <- param_extract_long("sal")
head(sal_long)
tail(sal_long)
domgl_long <- param_extract_long("do_mgl")
head(domgl_long)
tail(domgl_long)
dopct_long <- param_extract_long("do_pct")
head(dopct_long)
tail(dopct_long)
ph_long <- param_extract_long("ph")
head(ph_long)
tail(ph_long)
beeswarm_wq <- function(dat, title = "", xlab = "Site", ylab = "value") {
ggplot(dat) +
geom_quasirandom(aes(x = site, y = value, color = site),
na.rm = TRUE, # ignore missing data
show.legend = FALSE) +  # don't need a legend for colors by site
labs(title = title,
x = xlab,
y = ylab) +
theme_bw()
}
beeswarm_wq(ph_long)
beeswarm_wq <- function(dat, title = "", xlab = "Site", ylab = "value") {
p <- ggplot(dat) +
geom_quasirandom(aes(x = site, y = value, color = site),
na.rm = TRUE, # ignore missing data
show.legend = FALSE) +  # don't need a legend for colors by site
labs(title = title,
x = xlab,
y = ylab) +
theme_bw()
print(p)
}
beeswarm_wq(sal_long)
names(dat_bh)
?fct_recode
# glue them all together and gather into a long format
all <- bc %>%
left_join(bh) %>%
left_join(bl) %>%
left_join(pc) %>%
gather(key = "site", value = "value", -datetimestamp) %>%
fct_recode(site, "BH", "BC", "BL", "PC")
BC <- dat_bc
BH <- dat_bh
BL <- dat_bl
PC <- dat_pc
param <- "sal"
bc <- BC %>%
select(datetimestamp, !!param) %>%
rename(BC = !!param)
bh <- BH %>%
select(datetimestamp, !!param) %>%
rename(BH = !!param)
bl <- BL %>%
select(datetimestamp, !!param) %>%
rename(BL = !!param)
pc <- PC %>%
select(datetimestamp, !!param) %>%
rename(PC = !!param)
all <- bc %>%
left_join(bh) %>%
left_join(bl) %>%
left_join(pc) %>%
gather(key = "site", value = "value", -datetimestamp) %>%
fct_recode(site, "BH", "BC", "BL", "PC")
all <- bc %>%
left_join(bh) %>%
left_join(bl) %>%
left_join(pc) %>%
gather(key = "site", value = "value", -datetimestamp)
str(all)
# glue them all together and gather into a long format
all <- bc %>%
left_join(bh) %>%
left_join(bl) %>%
left_join(pc) %>%
gather(key = "site", value = "value", -datetimestamp) %>%
mutate(site = factor(site))
str(all$site)
?factor
# glue them all together and gather into a long format
all <- bc %>%
left_join(bh) %>%
left_join(bl) %>%
left_join(pc) %>%
gather(key = "site", value = "value", -datetimestamp) %>%
mutate(site = factor(site)) %>%
fct_reorder(site, "BH", "BC", "BL", "PC")
all$siteb <- fct_reorder(all$site, "BH", "BC", "BL", "PC")
all$siteb <- fct_relevel(all$site, "BH", "BC", "BL", "PC")
str(all$siteb)
# glue them all together and gather into a long format
all <- bc %>%
left_join(bh) %>%
left_join(bl) %>%
left_join(pc) %>%
gather(key = "site", value = "value", -datetimestamp) %>%
mutate(site = factor(site)) %>%
fct_relevel(site, "BH", "BC", "BL", "PC")
# glue them all together and gather into a long format
all <- bc %>%
left_join(bh) %>%
left_join(bl) %>%
left_join(pc) %>%
gather(key = "site", value = "value", -datetimestamp) %>%
mutate(site = factor(site),
site = fct_relevel(site, "BH", "BC", "BL", "PC"))
head(all)
str(all$site)
beeswarm_wq(all)
